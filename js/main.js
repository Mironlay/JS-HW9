// –ó–∞–≤–¥–∞–Ω–Ω—è 1
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(array), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for, —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç—ñ [–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞] - [–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞].
// –ù—É–º–µ—Ä–∞—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑ —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ '1 - Mango', –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ '3 - Ajax'.

function logItems(array) {
    let result = ""
    for (let i = 0; i < array.length; i += 1) {
        result += (`${i + 1} - ${array[i]} \n`);
    }
    return result
}
console.log(logItems(['Mango', 'Poly', 'Ajax']));


// –ó–∞–≤–¥–∞–Ω–Ω—è 2
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –≤–∞—Ä—Ç–æ—Å—Ç—ñ –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –ø—Ä–∏–∫—Ä–∞—Å. –î–ª—è —Ü—å–æ–≥–æ —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateEngravingPrice(message, pricePerWord) –ø—Ä–∏–π–º–∞—é—á—É —Ä—è–¥–æ–∫ (–≤ —Ä—è–¥–∫—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–ª–æ–≤–∞ —ñ –ø—Ä–æ–≥–∞–ª–∏–Ω–∏) —ñ —Ü—ñ–Ω—É –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ü—ñ–Ω—É –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö —Å–ª—ñ–≤ –≤ —Ä—è–¥–∫—É.
function calculateEngravingPrice(message, pricePerWord) {
    const copyWord = message.split(" ");
    const price = copyWord.length * pricePerWord;
    return price;
}
console.log(calculateEngravingPrice("–¢–µ—Å—Ç –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è", 65));



// –ó–∞–≤–¥–∞–Ω–Ω—è 3
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findLongestWord(string), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–æ–≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫ (–≤ —Ä—è–¥–∫—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–ª–æ–≤–∞ —ñ –ø—Ä–æ–≥–∞–ª–∏–Ω–∏) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–¥–æ–≤—à–µ —Å–ª–æ–≤–æ –≤ —Ü—å–æ–º—É —Ä—è–¥–∫—É.
function findLongestWord(string) {
    const sentenceCopy = string.split(" ")
    let biggestWord = string[0];
    for (let i = 0; i < sentenceCopy.length; i += 1) {
        if (biggestWord.length < sentenceCopy[i].length)
        biggestWord = sentenceCopy[i];
    }
    return biggestWord
}

console.log(findLongestWord("hello my name is Miroslav"));


// –ó–∞–≤–¥–∞–Ω–Ω—è 4
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatString(string) —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ —ñ —Ñ–æ—Ä–º–∞—Ç—É—î –π–æ–≥–æ —è–∫—â–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ.
// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫–∞ –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—î 40 —Å–∏–º–≤–æ–ª—ñ–≤, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î —ó—ó –≤ –ø–æ—á–∞—Ç–∫–æ–≤–æ–º—É –≤–∏–≥–ª—è–¥—ñ.
// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ –±—ñ–ª—å—à–µ 40 —Å–∏–º–≤–æ–ª—ñ–≤, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä—ñ–∑–∞—î —Ä—è–¥–æ–∫ –¥–æ 40-–∫–∞ —Å–∏–º–≤–æ–ª—ñ–≤ —ñ –¥–æ–¥–∞—î –≤ –∫—ñ–Ω–µ—Ü—å —Ä—è–¥–∫–∞ —Ç—Ä–∏ –∫—Ä–∞–ø–∫–∏ '...', –ø—ñ—Å–ª—è —á–æ–≥–æ –ø–æ–≤–µ—Ä—Ç–∞—î —É–∫–æ—Ä–æ—á–µ–Ω—É –≤–µ—Ä—Å—ñ—é.
function formatString(string) {
    if (string.length <= 40) {
        return string
    }
    else {
    return string.slice(0,40) + "..."; 
    }
}

console.log(formatString("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed et sapien eros. Duis fermentum finibus aliquet. Vestibulum ut ante tellus. Ut nunc elit, cursus at orci non, elementum venenatis enim. Donec laoreet nibh lectus, ac porttitor orci ultrices eget. Suspendisse ullamcorper, turpis nec elementum"));



// –ó–∞–≤–¥–∞–Ω–Ω—è 5
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é checkForSpam(message), –ø—Ä–∏–π–º–∞—é—á—É 1 –ø–∞—Ä–∞–º–µ—Ç—Ä message ‚Äî —Ä—è–¥–æ–∫. –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä—è—î —ó—ó –Ω–∞ –≤–º—ñ—Å—Ç —Å–ª—ñ–≤ spam —ñ sale. –Ø–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ —Å–ª–æ–≤–æ, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î true, —è–∫—â–æ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö —Å–ª—ñ–≤ –Ω–µ–º–∞—î —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î false. –°–ª–æ–≤–∞ –≤ —Ä—è–¥–∫—É –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤ –¥–æ–≤—ñ–ª—å–Ω–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ.
function checkForSpam(message) {
    const copyMessage = message.toLowerCase().trim().split(" ");
    if (copyMessage.includes("sale") || copyMessage.includes("spam")) {
        return true
    } else  {
        return false
    }
}

console.log(checkForSpam("I'm looking for a spam"));
console.log(checkForSpam("I'm looking for a sale"));
console.log(checkForSpam("I'm looking for a shop"));


// –ó–∞–≤–¥–∞–Ω–Ω—è 6
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º:
// –ü—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–æ–ø–æ–Ω—É—î—Ç—å—Å—è –≤ prompt –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ. –í–≤–µ–¥–µ–Ω–Ω—è –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ –∑–º—ñ–Ω–Ω—É input —ñ –¥–æ–¥–∞—î—Ç—å—Å—è –≤ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers.
// –û–ø–µ—Ä–∞—Ü—ñ—è –≤–≤–µ–¥–µ–Ω–Ω—è —á–∏—Å–ª–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –º–∞—Å–∏–≤ —Ç—Ä–∏–≤–∞—î –¥–æ —Ç–∏—Ö –ø–æ—Ä, –ø—ñ—Ä, –ø–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –Ω–∞—Ç–∏—Å–Ω–µ Cancel –≤ prompt.
// –ü—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏–ø–∏–Ω–∏–≤ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ Cancel, —è–∫—â–æ –º–∞—Å–∏–≤ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É —ñ –∑–∞–ø–∏—Å–∞—Ç–∏ —ó—ó –≤ –∑–º—ñ–Ω–Ω—É total. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª for –∞–±–æ for...of. –ü—ñ—Å–ª—è —á–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å –≤–∏–≤–µ–¥–∏ —Ä—è–¥–æ–∫ '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î [—Å—É–º–∞]'.
// üîî –†–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–æ–≥–æ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤—ñ–≤ —Å–∞–º–µ —á–∏—Å–ª–æ, –∞ –Ω–µ –¥–æ–≤—ñ–ª—å–Ω–∏–π –Ω–∞–±—ñ—Ä —Å–∏–º–≤–æ–ª—ñ–≤, –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ. –Ø–∫—â–æ —Ö–æ—á–µ—à, –≤ —Ä–∞–∑—ñ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É–π alert –∑ —Ç–µ–∫—Å—Ç–æ–º '–ë—É–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑', –ø—Ä–∏ —Ü—å–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç prompt–∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –≤ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –ø—ñ—Å–ª—è —á–æ–≥–æ –∑–Ω–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–æ–ø–æ–Ω—É—î—Ç—å—Å—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –≤ prompt.

let input;
const numbers = [];
let total = 0;
while (true) {
    input = prompt("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ:")
    if (input === null) {
        break
    }
    const num = Number(input);

    if (isNaN(num)) {
        alert('–ë—É–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑');
        continue;
    }
    numbers.push(num);
}

if (numbers.length > 0) {
    for (let i = 0; i < numbers.length; i += 1) {
        total += numbers[i];
    }

    console.log(`–°—É–º–∞ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î ${total}`);

} else {
    console.log("–ù–µ–º–∞—î –≤–≤–µ–¥–µ–Ω–∏—Ö —á–∏—Å–µ–ª");
}


